//
// Protocol buffers definition
//
syntax = "proto3";
package pt.tecnico.bank.server.grpc;


message Transaction {
  int32 amount = 1;
  string sender_username = 2;
  string receiver_username = 3;
  bytes sender_key = 4;
  bytes receiver_key = 5;
  int32 wid = 6;
  bytes signature = 7;
}

message PingRequest {
  string input = 1;
}

message PingResponse {
  string output = 1;
}

message OpenAccountRequest {
  string username = 1;
  int32 init_wid = 2;
  int32 init_balance = 3;
  bytes pair_signature = 4; // (wid, balance)*
  bytes public_key = 5;
  bytes signature = 6;
}

message OpenAccountResponse {
  string username = 1;
  bytes public_key = 2;
  bytes signature = 3;
}


message SendAmountRequest {
  Transaction transaction = 1;
  int64 nonce = 2;
  int64 timestamp = 3;

  // regular
  int32 balance = 4; // b = b - amount
  bytes pair_signature = 5; // just for server to save

  bytes signature = 6;
}

message SendAmountResponse {
  bytes public_key = 1;
  int64 nonce = 2;

  int32 wid = 3; // check if equal to mine wid

  //repeated bytes quorumAdeb;

  bytes signature = 4;
}


message CheckAccountRequest {
  bytes client_key = 1;
  bytes check_key = 2;
  int64 nonce = 3;
  int64 timestamp = 4;

  int32 rid = 5;
}

message CheckAccountResponse {
  repeated Transaction pending_transactions = 1;
  int64 nonce = 2;

  int32 rid = 3;

  int32 balance = 4;
  int32 wid = 5;
  bytes pair_signature = 6;

  bytes signature = 7;
}


message ReceiveAmountRequest {
  repeated Transaction pending_transactions = 1;
  bytes public_key = 2;
  int64 nonce = 3;
  int64 timestamp = 4;

  int32 wid = 5;
  int32 balance = 6; // b = b + amount
  bytes pair_signature = 7; // just for server to save

  bytes signature = 8;

}

message ReceiveAmountResponse {
  bytes public_key = 1;
  int64 nonce = 2;

  int32 wid = 3;

  bytes signature = 4;
}


message AuditRequest {
  bytes client_key = 1;
  bytes audit_key = 2;
  int64 nonce = 3;
  int64 timestamp = 4;

  int32 rid = 5;
}

message AuditResponse {
  repeated Transaction transactions = 1;
  int64 nonce = 2;

  int32 rid = 3;

  bytes signature = 4;
}

message ErrorResponse {
  string errorMsg = 1;
  int64 nonce = 2;
  bytes signature = 3;
}

service ServerService {
  rpc ping(PingRequest) returns (PingResponse);
  rpc openAccount(OpenAccountRequest) returns (OpenAccountResponse);
  rpc sendAmount(SendAmountRequest) returns (SendAmountResponse);
  rpc checkAccount(CheckAccountRequest) returns (CheckAccountResponse);
  rpc receiveAmount(ReceiveAmountRequest) returns (ReceiveAmountResponse);
  rpc audit(AuditRequest) returns (AuditResponse);
}